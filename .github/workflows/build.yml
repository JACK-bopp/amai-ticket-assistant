name: Build APK
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHONIOENCODING: utf-8
  PYTHONLEGACYWINDOWSSTDIO: utf-8
  PYTHONUNBUFFERED: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Check directory structure
      run: |
        echo "项目目录结构："
        ls -la
        echo "damai_ticket目录："
        ls -la damai_ticket || echo "目录不存在"
        echo "assets目录："
        ls -la assets || echo "目录不存在"
        echo "检查main.py："
        cat main.py

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install kivy
        pip install pillow
        pip install requests
        pip install pyyaml

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          python3 \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          build-essential \
          libsqlite3-dev \
          sqlite3 \
          bzip2 \
          libbz2-dev \
          zlib1g-dev \
          libssl-dev \
          openssl \
          libgdbm-dev \
          libgdbm-compat-dev \
          liblzma-dev \
          libreadline-dev \
          libncursesw5-dev \
          libffi-dev \
          uuid-dev \
          libopenblas-dev \
          libjpeg-dev \
          libtiff-dev \
          libfreetype6-dev \
          libwebp-dev \
          autoconf \
          automake \
          cmake \
          gettext \
          patch \
          pkg-config

    - name: Create resources
      run: |
        echo "创建必要的资源文件..."
        mkdir -p assets
        mkdir -p damai_ticket
        echo 'Creating favicon...'
        touch assets/favicon.png
        echo 'Creating icon...'
        python -c "
        from PIL import Image, ImageDraw
        img = Image.new('RGBA', (512, 512), color=(51, 153, 255, 255))
        d = ImageDraw.Draw(img)
        d.ellipse((100, 100, 412, 412), fill=(255, 255, 255, 255))
        d.text((200, 200), '票', fill=(51, 153, 255, 255), font_size=150)
        img.save('assets/icon.png')
        img.save('assets/presplash.png')
        "

    - name: Check buildozer.spec
      run: |
        echo "Buildozer.spec内容："
        cat buildozer.spec
        
    - name: Check app files
      run: |
        echo "检查main.py文件..."
        cat main.py | head -n 20
        
        echo "检查是否存在其他必要文件..."
        if [ -f "damai_ticket/__init__.py" ]; then
          echo "damai_ticket/__init__.py 存在"
          cat damai_ticket/__init__.py
        else
          echo "damai_ticket/__init__.py 不存在，创建它..."
          mkdir -p damai_ticket
          echo '"""大麦抢票助手 - Android版"""' > damai_ticket/__init__.py
          echo "__version__ = '1.0.0'" >> damai_ticket/__init__.py
          echo "__author__ = 'DamaiTicket'" >> damai_ticket/__init__.py
        fi

    - name: Build APK with verbose output
      run: |
        export PATH=$PATH:~/.local/bin/
        export TERM=xterm
        buildozer -v android debug | tee buildozer_log.txt

    - name: Check build logs
      if: always()
      run: |
        echo "构建日志："
        if [ -d ".buildozer/logs" ]; then
          ls -la .buildozer/logs/
          cat .buildozer/logs/buildozer-*.log || echo "No buildozer logs found"
        else
          echo "没有.buildozer/logs目录"
          cat buildozer_log.txt
        fi

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: damaiticket-apk
        path: bin/*.apk
        if-no-files-found: error

    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          .buildozer/logs/
          buildozer_log.txt 